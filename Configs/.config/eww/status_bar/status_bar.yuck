(defwindow StatusBar
  :monitor 0
  :geometry (geometry 
    :x "0px"
    :y "0px"
    :width "40px"
    :height "100%"
    :anchor "left center")
  :stacking "fg"
  :exclusive true
  :focusable "none"
(status_bar))


(defwidget status_bar[]
  (centerbox
    :orientation "v"

    (top)
    (center)
    (bottom)
  )
)


(defwidget top[]
  (box
    :class "top" :valign "start"
    :spacing 10 :orientation "v" :space-evenly false

    (dashboard_button)
    (workspaces)
  )
)

(defvar workspaces "[1,0,0,0,0,0]")

(defwidget workspaces[]
  (box
    :class "workspaces" :halign "center" 
    :spacing 3 :orientation "v"

    (button :class {workspaces[0] == 0 ? "inactive" : "active"} "w")
    (button :class {workspaces[1] == 0 ? "inactive" : "active"} "i")
    (button :class {workspaces[2] == 0 ? "inactive" : "active"} "s")
    (button :class {workspaces[3] == 0 ? "inactive" : "active"} "d")
    (button :class {workspaces[4] == 0 ? "inactive" : "active"} "o")
    (button :class {workspaces[5] == 0 ? "inactive" : "active"} "m")
  )
)

(defvar is_dasboard_active false)
(defwidget dashboard_button[]
  (box
    (button
      :class {is_dasboard_active ? "arch_icon_active" : "arch_icon"}
      :onclick
        {
          is_dasboard_active ?
          "${EWW_CMD} update is_dasboard_active=false &&
          ${EWW_CMD} close Dashboard"
          :
          "${EWW_CMD} update is_dasboard_active=true &&
          ${EWW_CMD} open Dashboard"
        }

      "󰣇 ")
  )
)


(defwidget center[]
    (box
      (clock)
    )
)

(defwidget clock[]
  (box
    :valign "center"
    :orientation "v" :space-evenly false

    (label
      :class "clock_label"
      :wrap true
      :text {formattime(EWW_TIME, "%H %M")})
  )
)


(defwidget bottom[]
  (box
    :class "bottom" :valign "end"
    :orientation "v" :space-evenly false

    (brightness)
    (volume)
  )
)

(defvar brightness_value "100")
(defvar is_brightness_expand false)

(defwidget brightness[]
  (eventbox
    :class "brightness"
    :onhover "${EWW_CMD} update is_brightness_expand=true"
    :onhoverlost "${EWW_CMD} update is_brightness_expand=false"

    (box
      :orientation "v" :space-evenly false

      (revealer
        :transition "slideup" :reveal is_brightness_expand

        (box
          (scale
            :class "scale"
            :flipped true :value brightness_value :min 0 :max 101 
            :orientation "v"
            :onchange "brightnessctl s {}% && ./scripts/update-brightness-value.sh")

          (label
            :class "label"
            :show-truncated false :wrap true :wrap-mode "char"
            :text brightness_value)
        )
      )

      (button
        :height 30
        "󰌵")
    )
  )
)

(defvar volume_value "100")
(defvar is_volume_expand false)

(defwidget volume[]
  (eventbox
    :class "volume"
    :onhover "${EWW_CMD} update is_volume_expand=true"
    :onhoverlost "${EWW_CMD} update is_volume_expand=false"

    (box
      :orientation "v" :space-evenly false

      (revealer
        :transition "slideup" :reveal is_volume_expand

        (box
          (scale
            :class "scale"
            :flipped true :value volume_value :min 0 :max 101 :orientation "v"
            :onchange "wpctl set-volume @DEFAULT_AUDIO_SINK@ {}% && ./scripts/update-volume-value.sh" )

          (label
            :class "label"
            :show-truncated false :wrap true :wrap-mode "char"
            :text volume_value)
        )
      )

      (button
        :height 30
        " ")
    )
  )
)
